<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        bFLHN+uVZwAAAABJRU5ErkJggg==
</value>
  </data>
</root>